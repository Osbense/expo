{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["import {\n  AnchorType,\n  BlendShape,\n  DepthDataQuality,\n  DepthDataAccuracy,\n} from './enums';\n\nexport type Size = {\n  width: number;\n  height: number;\n};\n\nexport type Vector3 = {\n  x: number;\n  y: number;\n  z: number;\n};\n\nexport type Vector2 = {\n  x: number;\n  y: number;\n};\n\nexport type TextureCoordinate = {\n  u: number;\n  v: number;\n};\n\nexport type Matrix = number[];\n\nexport type FaceGeometry = {\n  vertexCount: number;\n  textureCoordinateCount: number;\n  triangleCount: number;\n  vertices: Vector3[];\n  textureCoordinates: TextureCoordinate[];\n  triangleIndices: number[];\n};\n\nexport type Anchor = {\n  type: AnchorType;\n  transform: Matrix;\n  id: string;\n  center?: Vector3;\n  extent?: { width: number; length: number };\n  image?: {\n    name: string | null;\n    size: Size;\n  };\n  geometry?: FaceGeometry;\n  blendShapes?: { [shape in BlendShape]?: number };\n};\n\nexport type HitTest = {\n  type: number;\n  distance: number;\n  localTransform: number[];\n  worldTransform: number[];\n  anchor: Anchor;\n};\n\nexport type HitTestResults = {\n  hitTest: HitTest;\n};\n\nexport type DetectionImage = {\n  uri: string;\n  width: number;\n  name?: string;\n};\n\nexport type ARFrameAnchorRequest = {\n  ARFaceTrackingConfiguration?: {\n    geometry?: boolean;\n    blendShapes?: boolean | BlendShape[];\n  };\n};\n\nexport type ARFrameRequest = {\n  anchors?: ARFrameAnchorRequest;\n  rawFeaturePoints?: boolean;\n  lightEstimation?: boolean;\n  capturedDepthData?: boolean;\n};\n\nexport type LightEstimation = {\n  ambientIntensity: number;\n  ambientColorTemperature: number;\n  primaryLightDirection?: Vector3;\n  primaryLightIntensity?: number;\n};\n\nexport type RawFeaturePoint = {\n  x: number;\n  y: number;\n  z: number;\n  id: string;\n};\n\nexport type CameraCalibrationData = {\n  intrinsicMatrix: Matrix,\n  intrinsicMatrixReferenceDimensions: Size,\n  extrinsicMatrix: Matrix,\n  pixelSize: number,\n  lensDistortionLookupTable: any,\n  inverseLensDistortionLookupTable: any,\n  lensDistortionCenter: Vector3,\n};\n\nexport type CapturedDepthData = {\n  timestamp: number,\n  depthDataQuality: DepthDataQuality,\n  depthDataAccuracy: DepthDataAccuracy,\n  depthDataFiltered: boolean,\n  cameraCalibrationData: CameraCalibrationData,\n};\n\nexport type ARFrame = {\n  timestamp: number;\n  anchors?: Anchor[] | null;\n  rawFeaturePoints?: RawFeaturePoint[] | null;\n  lightEstimation?: LightEstimation | null;\n  capturedDepthData?: CapturedDepthData | null;\n};\n\nexport type ARMatrices = {\n  transform: Matrix,\n  viewMatrix: Matrix,\n  projectionMatrix: Matrix,\n};\n\nexport type ImageResolution = {\n  width: number,\n  height: number,\n};\n\nexport type VideoFormat = {\n  type: string,\n  imageResolution: ImageResolution,\n  framesPerSecond: number,\n};\n"]}