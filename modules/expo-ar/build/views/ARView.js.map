{"version":3,"file":"ARView.js","sourceRoot":"","sources":["../../src/views/ARView.tsx"],"names":[],"mappings":"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","sourcesContent":["declare global {\n  namespace NodeJS {\n    interface Global {\n      nativePerformanceNow(): number;\n    }\n  }\n}\n\nimport * as React from 'react';\nimport {\n  AppState,\n  findNodeHandle,\n  PixelRatio,\n  Platform,\n} from 'react-native';\nimport uuidv4 from 'uuid/v4';\nimport { GLView } from 'expo-gl';\n\nimport {\n  TrackingConfiguration,\n} from '../enums';\nimport {\n  startAsync,\n  isAvailable,\n  stopAsync,\n} from '../functions';\n\ninterface Props {\n  style: any;\n  glviewStyle: any;\n  shouldIgnoreSafeGaurds?: boolean;\n  isAREnabled: boolean;\n  isArRunningStateEnabled?: boolean;\n  isArCameraStateEnabled?: boolean;\n  isShadowsEnabled?: boolean;\n  runningProps: any;\n  cameraProps: any;\n  ARTrackingConfiguration: TrackingConfiguration;\n  onShouldReloadContext?: () => void;\n  onError: (message: string | Error) => void;\n  onResize: ({ x, y, width, height, scale }: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    scale: number;\n  }) => void;\n  onRender: (delta: number) => void;\n  onContextCreate: ({ gl, width, height, scale, canvas }: {\n    gl: any;\n    width: number;\n    height: number;\n    scale: number;\n    canvas: number | null;\n  }) => void;\n}\n\nexport default class ARView extends React.Component<Props> {\n  nativeRef?: number;\n  gl?: any;\n  rafID?: number;\n\n  static defaultProps = {\n    arRunningProps: {},\n    arCameraProps: {},\n    isShadowsEnabled: false,\n    ARTrackingConfiguration: TrackingConfiguration.World,\n    isAREnabled: true,\n  };\n\n  state = {\n    appState: AppState.currentState,\n    id: uuidv4(),\n    isReady: false,\n    isARAvailable: undefined,\n  };\n\n  componentDidMount() {\n    AppState.addEventListener('change', this.handleAppStateChangeAsync);\n    this.checkARAvailability();\n  }\n\n  componentWillUnmount() {\n    this.destroy();\n    AppState.removeEventListener('change', this.handleAppStateChangeAsync);\n  }\n\n  checkARAvailability = async () => {\n    try {\n      const available = await isAvailable();\n      this.setState({ isReady: true, isARAvailable: available });\n    } catch ({ message }) {\n      if (this.props.onError) {\n        this.props.onError(message);\n      } else {\n        console.error(message);\n      }\n      this.setState({ isReady: true, isARAvailable: false });\n    }\n  }\n\n  destroy = () => {\n    stopAsync();\n    this.gl = undefined;\n    this.nativeRef = undefined;\n    if (this.rafID) {\n      cancelAnimationFrame(this.rafID);\n    }\n  };\n\n  handleAppStateChangeAsync = nextAppState => {\n    if (\n      this.state.appState.match(/inactive|background/) &&\n      nextAppState === 'active'\n    ) {\n      // console.log('App has come to the foreground!')\n      const { onShouldReloadContext } = this.props;\n      if (onShouldReloadContext && onShouldReloadContext()) {\n        this.destroy();\n        this.setState({ appState: nextAppState, id: uuidv4() });\n        return;\n      }\n    }\n    this.setState({ appState: nextAppState });\n  };\n\n  render() {\n    const {\n      shouldIgnoreSafeGaurds,\n      isAREnabled,\n    } = this.props;\n\n    const {\n      isReady,\n      isARAvailable,\n    } = this.state;\n\n    if (!isReady) {\n      return null;\n    }\n\n    if (!shouldIgnoreSafeGaurds && isAREnabled && !isARAvailable) {\n      return null;\n    }\n\n    return (\n      <GLView\n        key={this.state.id}\n        style={{ flex: 1 }}\n        nativeRef_EXPERIMENTAL={ref => (this.nativeRef = ref)}\n        onLayout={this.onLayout}\n        onContextCreate={this.onContextCreate}\n      />\n    );\n  }\n\n  onLayout = ({ nativeEvent: { layout: { x, y, width, height } } }) => {\n    if (!this.gl) {\n      return;\n    }\n    const scale = PixelRatio.get();\n    if (this.props.onResize) {\n      this.props.onResize({ x, y, width, height, scale });\n    }\n  };\n\n  onContextCreate = async gl => {\n    this.gl = gl;\n    const {\n      isShadowsEnabled,\n      isAREnabled,\n      ARTrackingConfiguration,\n      onContextCreate,\n      onRender,\n    } = this.props;\n    const scale = PixelRatio.get();\n\n    if (Platform.OS === 'ios' && isShadowsEnabled) {\n      this.gl.createRenderbuffer = () => ({});\n    }\n\n    if (isAREnabled) {\n      // Start AR session\n      await startAsync(findNodeHandle(this.nativeRef!) as number, ARTrackingConfiguration);\n    }\n\n    await onContextCreate({\n      gl,\n      width: gl.drawingBufferWidth / scale,\n      height: gl.drawingBufferHeight / scale,\n      scale,\n      canvas: null,\n    });\n\n    let lastFrameTime;\n    const render = () => {\n      if (!this.gl) {\n        return;\n      }\n      const now = 0.001 * global.nativePerformanceNow();\n      const delta = lastFrameTime !== undefined ? now - lastFrameTime : 0.16666;\n      lastFrameTime = now;\n      \n      this.rafID = requestAnimationFrame(render);\n      onRender(delta);\n      // NOTE: At the end of each frame, notify `Expo.GLView` with the below\n      gl.endFrameEXP();\n    };\n    render();\n  };\n}\n"]}